---
http_interactions:
- request:
    method: get
    uri: https://api.spoonacular.com/recipes/636411/information?apiKey=59081658bcfe4ba0bbee5ee7f1d8b0bf
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.4.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 04 Aug 2022 17:38:13 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '3073'
      Connection:
      - keep-alive
      Allow-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Headers:
      - Authorization, UserId, Hash, Name, Password, Accept, Accept-Language, Content-Language,
        Content-Type, Cache-Control, Origin, X-Requested-With
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, OPTIONS, DELETE, PUT
      Allow-Control-Allow-Methods:
      - GET, HEAD, POST, OPTIONS, DELETE, PUT
      X-Api-Quota-Request:
      - '1.0'
      X-Api-Quota-Used:
      - '130.89999999999986'
      X-Api-Quota-Left:
      - '19.100000000000136'
      Cf-Cache-Status:
      - DYNAMIC
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=yHxZ8GZ6pPDfuYJu69I%2Bk%2B1DJMVKphEAmmFWGoH5z1bDENJZvCqIpBfoTwpJz91D6eRma0QJfTbL1btl0EXDLGlrAC%2BU8uZ7mv0j3VyMTsjFHhmGx%2BpbaBFbuMETSoxSFWoP7p4%3D"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Cf-Ray:
      - 735910befcc28e9c-DEN
      Alt-Svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 04 Aug 2022 17:38:13 GMT
recorded_with: VCR 6.1.0
